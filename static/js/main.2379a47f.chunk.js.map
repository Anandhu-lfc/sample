{"version":3,"sources":["Header.js","use.js","counter.jsx","Employee.js","update.js","Axio.js","App.js","reportWebVitals.js","index.js"],"names":["Hello","props","Data1","Use","Counter","title","count1","Employee","name","age","Update","useEffect","useState","updat","setUpdate","onClick","Axio","state","setState","axios","get","then","Response","console","log","data","map","obj","index","body","App","setstate","count","setCount","style","color","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAMiBA,MANjB,SAAeC,GACX,OACE,4CAAeA,EAAMC,MAArB,QCQSC,MARf,WACI,OACI,8BACI,8CCMGC,MATf,SAAiBH,GACb,IAAOI,EAAcJ,EAAdI,MAAMC,EAAQL,EAARK,OACb,OACI,8BACK,+BAAKD,EAAOC,QCKVC,MATf,SAAkBN,GACd,OACI,8BACI,uCAAUA,EAAMO,KAAhB,QAA2BP,EAAMQ,UCc9BC,MAjBf,WACIC,qBAAU,eAIV,MAAuBC,mBAAS,GAAhC,mBAAMC,EAAN,KAAYC,EAAZ,KAIA,OACI,gCACI,wBAAQC,QALL,WACPD,EAAUD,EAAM,IAIZ,oBACD,6CAAgBA,S,iBCcZG,MAzBf,WACI,MAAsBJ,mBAAS,IAA/B,mBAAMK,EAAN,KAAYC,EAAZ,KACA,OACI,gCACI,4CACA,wBAAQH,QAAS,WACbI,IAAMC,IAAI,8CAA8CC,MAAK,SAACC,GAC1DC,QAAQC,IAAIF,EAASG,MACrBP,EAASI,EAASG,UAH1B,mBAMCR,EAAMS,KAAI,SAACC,EAAIC,GACZ,OACI,gCACI,6BAAKA,IACL,6BAAKD,EAAItB,QACT,6BAAKsB,EAAIE,iBC8ClBC,MAtDf,WAGE,IAAML,EAAK,SACX,EAAuBb,oBAAS,GAAhC,mBAAOK,EAAP,KAAac,EAAb,KAEA,EAAuBnB,mBAAS,GAAhC,mBAAOoB,EAAP,KAAaC,EAAb,KAUA,OACE,gCAEE,wBAAQlB,QAZG,WACbkB,EAASD,EAAM,IAWb,iBACA,qBAAIE,MAAO,CAACC,MAAM,OAAlB,yBAAuCH,KACvC,oBAAGI,UAAU,OAAb,iCAAyCX,KAEzC,cAAC,EAAD,CAAOvB,MAAOuB,IAEd,cAAC,EAAD,CAASpB,MAAM,cAAcC,OAAQ0B,IACrC,cAAC,EAAD,CAAS3B,MAAM,cAAcC,OAAQ0B,IAErC,oBAAIjB,QAAS,kBAAIgB,GAAUd,IAA3B,mBACCA,EAAS,cAAC,EAAD,IAAW,KAErB,cAAC,EAAD,IAnBG,CAAC,CAACT,KAAK,UAAUC,IAAI,IAC7B,CAACD,KAAK,KAAKC,IAAI,IAChB,CAACD,KAAK,KAAKC,IAAI,KAqBJiB,KAAI,SAACC,GACR,OACE,cAAC,EAAD,CAAUnB,KAAMmB,EAAInB,KAAMC,IAAKkB,EAAIlB,SAK7C,cAAC,EAAD,QCzCe4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2379a47f.chunk.js","sourcesContent":["function Hello(props){\r\n    return(\r\n      <h3>my name is{props.Data1} </h3>\r\n      \r\n    )\r\n  }\r\n  export default Hello","import React from 'react'\r\n\r\nfunction Use() {\r\n    return (\r\n        <div>\r\n            <h1>use state</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Use\r\n","import React from 'react'\r\n\r\nfunction Counter(props) {\r\n    const {title,count1}=props\r\n    return (\r\n        <div>\r\n             <h1>{title}{count1}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import React from 'react'\r\n\r\nfunction Employee(props) {\r\n    return (\r\n        <div>\r\n            <h1>name:{props.name},age:{props.age}</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employee\r\n","\r\nimport React, {useState,useEffect } from 'react';\r\nfunction Update() {\r\n    useEffect(()=>{\r\n        \r\n    })\r\n    \r\n    const[updat,setUpdate]=useState(0)\r\n    const sett=()=>{\r\n        setUpdate(updat+1)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={sett}>update</button>\r\n           <h1>hello iam :{updat}</h1> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport {useState} from 'react'\r\nfunction Axio() {\r\n    const[state,setState]=useState([])\r\n    return (\r\n        <div>\r\n            <h1>hello axio</h1>\r\n            <button onClick={()=>{\r\n                axios.get('https://jsonplaceholder.typicode.com/posts').then((Response)=>{\r\n                    console.log(Response.data)\r\n                    setState(Response.data)\r\n                })\r\n            }}>click</button>\r\n            {state.map((obj,index)=>{\r\n                return(\r\n                    <div>\r\n                        <h1>{index}</h1>\r\n                        <h1>{obj.title}</h1>\r\n                        <h4>{obj.body}</h4>\r\n                        </div>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Axio\r\n","import { useState } from 'react';\nimport './a.css';\nimport Hello from './Header'\nimport Use from './use';\nimport Counter  from './counter';\nimport Employee from './Employee';\nimport Update from './update'\nimport Axio from './Axio';\n\n\n\nfunction App() {\n \n \n  const data=' react'\n  const [state,setstate]=useState(false)\n  \n  const [count,setCount]=useState(0)\n  const addCount=()=>{\n    setCount(count+1)\n    \n    \n  }\n let emp=[{name:'anandhu',age:25},\n {name:'az',age:25},\n{name:'ac',age:25}]\n\n  return (\n    <div>\n     \n      <button onClick={addCount}>add</button>\n      <h1 style={{color:'red'}}>hello world {count}</h1>\n      <p className=\"helo\">this is a sample of {data}</p>\n      \n      <Hello Data1={data}/>\n      \n      <Counter title='1st counter' count1={count}/>\n      <Counter title='2nd counter' count1={count}/>\n     \n      <h1 onClick={()=>setstate(!state)}>heyyy</h1>\n      {state ?  <Update/> :null }\n     \n      <Use/>\n      \n     \n     \n      {emp.map((obj)=>{\n        return(\n          <Employee name={obj.name} age={obj.age}/>\n        )\n      })}\n\n\n<Axio/>\n\n\n\n\n    \n    </div>\n    \n    \n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}